get_embeddings:
  handler: similarity.get_embeddings
  memorySize: 256
  timeout: 900
  maximumRetryAttempts: 0
  environment:
    IMAGE: ${self:custom.processing_image}
  layers:
    - {Ref: PythonRequirementsLambdaLayer}
  events:
    - http:
        path: get_embeddings
        method: get
        cors: true
        authorizer: aws_iam
  fileSystemConfig:
    localMountPath: '/mnt${self:custom.data_prep_mnt_path}'
    arn: ${cf:magicml-common-${self:custom.stage}.accessPointAArn}

stage_embed_master:
  handler: similarity.stage_embed_master
  memorySize: 7000
  timeout: 900
  maximumRetryAttempts: 0
  layers:
    - {Ref: PythonRequirementsLambdaLayer}
  events:
    - http:
        path: stage_embed_master
        method: post
        cors: true
        authorizer: aws_iam
    - s3:
        bucket: ${self:custom.inference_bucket}
        event: s3:ObjectCreated:*
        rules:
          - suffix: embeddings_matrix.parquet
        existing: true
  fileSystemConfig:
    localMountPath: '/mnt${self:custom.data_prep_mnt_path}'
    arn: ${cf:magicml-common-${self:custom.stage}.accessPointAArn}

stage_embed_worker:
  handler: similarity.stage_embed_worker
  memorySize: 7000
  timeout: 900
  maximumRetryAttempts: 1
  layers:
    - {Ref: PythonRequirementsLambdaLayer}
  events:
    - http:
        path: stage_embed_worker
        method: post
        cors: true
        authorizer: aws_iam
  fileSystemConfig:
    localMountPath: '/mnt${self:custom.data_prep_mnt_path}'
    arn: ${cf:magicml-common-${self:custom.stage}.accessPointAArn}